@model PagedList.IPagedList<ACMWeb.Models.AssessmentGrade>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create") | @Html.ActionLink("Upload", "Upload")
</p>
<table class="table">
    <tr>




        <th>
            Course
        </th>
        <th>Section</th>
        <th>CRN</th>
        <th>Student Id</th>
        <th>
            Grade Item
        </th>
        <th>
            Grade
        </th>
        <th>
            Grade 4
        </th>
        <th>
            Grade p
        </th>
        <th>
            Grade (Scaled)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Enroll.Section.Course.Code)
            </td>
            <td>@Html.DisplayFor(modelItem => item.Enroll.Section.Code)</td>
            <td>@Html.DisplayFor(modelItem => item.Enroll.SectionID)</td>
            <td>@Html.DisplayFor(modelItem => item.Enroll.StudentID)</td>
            <td>
                @Html.DisplayFor(modelItem => item.GradeItem.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Grade)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Grade4)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GradeP)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GradeS)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.AssessmentGradeID }) |
                @Html.ActionLink("Details", "Details", new { id = item.AssessmentGradeID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.AssessmentGradeID })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))